#!/bin/bash

set -eo pipefail

QOS="$(basename ${BASH_SOURCE})"
QOS_BIN="$(realpath ${BASH_SOURCE})"
QOS_DIR="$(realpath $(dirname ${QOS_BIN}))"
ENV_FILE="${QOS_DIR}/.env"
SCRIPT_DIR="${QOS_DIR}/_script"

source ${SCRIPT_DIR}/funcs.sh
source ${SCRIPT_DIR}/menu.sh
source ${SCRIPT_DIR}/config.sh
source ${SCRIPT_DIR}/apps.sh
source ${SCRIPT_DIR}/radios.sh
source ${SCRIPT_DIR}/bash_completion.sh

main() {
    if [[ "$1" == "bash_completion" ]]; then
        bash_completion
    elif [[ "$1" == "get" ]]; then
        shift
        get "$@"
    else
        dependencies
        generate_menu "${QOS}" "$@"
    fi
}

config() {
    generate_menu "${QOS} config" "$@"
}

apps() {
    generate_menu "${QOS} apps" "$@"
}

# config_ax25() {
#     wizard menu "${QOS} ax25" \
#            "settings (Callsign) = ${BASH_SOURCE} config" \
#            "pair (BTECH UV-PRO and clones) = ${BASH_SOURCE} pair || true" \
#            "enable (rfcomm KISS service) = ${BASH_SOURCE} configure_rfcomm_service" \
#            "check (AX.25 connection) = ${BASH_SOURCE} check_rfcomm_kiss"
# }

# config_ax25d() {
#     wizard menu "ax25d" \
#            "ax25d enable = ${BASH_SOURCE} configure_ax25d_service" \
#            "ax25d status = podman exec ax25d systemctl status ax25d || true" \
#            "ax25d logs = ${QOS_DIR}/ax25d/logs.sh || true" \
#            "ax25d disable = podman exec ax25d systemctl poweroff; systemctl disable --now ax25d.service ; podman rm -f ax25d" \
#            "ax25d shell = podman exec -it ax25d /bin/bash || true"
# }

main "$@"
